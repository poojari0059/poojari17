
<div>
                                                                    <b><h1><center>CODESLASH</center></h1></b>
   <b><h1>Multibase Addition Algorithm</h1></b>
<font face="arial">
<font size="4">
<p>

Abhinav is an intelligent student of Mathematics. He is trying to implement a <b>Multibase Addition Algorithm</b> which deals with large numbers. The algorithm states that, it is possible to get a number in base B if we add two numbers in the same base <b>B</b>.<br>
<b>NOTE:-For base above 10 use A,B,...and so on(Only Upper Case)</b><br> 
</p>

<b>Input Format</b><br>
The first line of input contains a single integer <b>T</b>, denoting the number of test cases. <br>
Each test case contains 3  lines describes a test case.<br>
 1. An integer <b>B</b> denoting the base of large numbers.<br>
 2. A large number <b>N1</b>.<br>
 3. A large number <b>N2</b>.<br><br>

<b>Constraints</b>
<ul>
<li>1<=<b>T</b><=10</li>
<li>1<=length(<b>N1</b>), length(<b>N2</b>)<=50</li>
<li>2<=<b>B</b><=20</li>
</ul>
<b>Output Format</b><br>
For each test case, print one of the following outcomes in a new line:
<ul>
<li>If both <b>N1</b> and <b>N2</b> are in base <b>B</b>, then print their sum in base <b>B</b></li>
  <li>If any one of the given numbers is not in base <b>B</b>, then print <b>NA</b> </li> 
</ul>
<b>Sample Input</b> <br>
3<br>
10 17 13<br>
8 15 21<br>
2 41 101<br>
<br>
<b>Sample output</b><br>
30<br>
36<br>
NA<br>
<br>
<b>Explanation</b><br>
<b>Testcase #01:</b> 17+13=30 ( Both are decimal numbers).<br>
<b>Testcase #02: </b>15+21=36 ( Both are octal numbers).<br>
<b>Testcase #03:</b> 41+101=NA ( 41 is not in base 2).<br>
<h4 style="color:red;">Updates
1.Remove preceding zero's from output string<br> 
</h4>

</font>
</font>
</div>
